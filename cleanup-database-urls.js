#!/usr/bin/env node

/**
 * üóÑÔ∏è SCRIPT DE NETTOYAGE DES URLS RENDER DANS LA BASE
 * Instructions pour nettoyer manuellement les anciennes URLs
 */

import fs from "fs";
import path from "path";
import { fileURLToPath } from "url";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

console.log("üóÑÔ∏è  NETTOYAGE DES URLS RENDER DANS LA BASE DE DONN√âES");
console.log("=".repeat(60));

console.log("\nüìã INSTRUCTIONS POUR NETTOYER LA BASE :");
console.log("");

console.log("1Ô∏è‚É£  CONNECTEZ-VOUS √Ä MONGODB :");
console.log("   - Ouvrez MongoDB Compass ou mongo shell");
console.log("   - Connectez-vous √† votre base : callgirls");
console.log("");

console.log("2Ô∏è‚É£  NETTOYER LES AVATARS :");
console.log("   db.users.updateMany(");
console.log("     { avatar: { $regex: /render\\.com|localhost/ } },");
console.log('     { $unset: { avatar: "" } }');
console.log("   );");
console.log("");

console.log("3Ô∏è‚É£  NETTOYER LA GALERIE :");
console.log("   db.users.updateMany(");
console.log('     { "gallery.url": { $regex: /render\\.com|localhost/ } },');
console.log(
  "     { $pull: { gallery: { url: { $regex: /render\\.com|localhost/ } } } }"
);
console.log("   );");
console.log("");

console.log("4Ô∏è‚É£  NETTOYER LES VID√âOS :");
console.log("   db.users.updateMany(");
console.log('     { "videos.url": { $regex: /render\\.com|localhost/ } },');
console.log(
  "     { $pull: { videos: { url: { $regex: /render\\.com|localhost/ } } } }"
);
console.log("   );");
console.log("");

console.log("5Ô∏è‚É£  V√âRIFIER LE NETTOYAGE :");
console.log("   db.users.find({");
console.log("     $or: [");
console.log("       { avatar: { $regex: /render\\.com|localhost/ } },");
console.log('       { "gallery.url": { $regex: /render\\.com|localhost/ } },');
console.log('       { "videos.url": { $regex: /render\\.com|localhost/ } }');
console.log("     ]");
console.log("   }).count();");
console.log("");

console.log("6Ô∏è‚É£  COMPTER LES UTILISATEURS SANS M√âDIAS :");
console.log("   db.users.countDocuments({");
console.log("     $and: [");
console.log(
  "       { $or: [{ avatar: { $exists: false } }, { avatar: null }] },"
);
console.log("       { gallery: { $size: 0 } },");
console.log("       { videos: { $size: 0 } }");
console.log("     ]");
console.log("   });");
console.log("");

console.log("üìä ALTERNATIVE AVEC MONGODB COMPASS :");
console.log('   - Ouvrez la collection "users"');
console.log('   - Utilisez l\'onglet "Aggregations"');
console.log("   - Appliquez les filtres ci-dessus");
console.log('   - Utilisez "Update" pour modifier les documents');
console.log("");

console.log("‚ö†Ô∏è  ATTENTION :");
console.log("   - Faites une sauvegarde avant de commencer");
console.log("   - Testez d'abord sur un petit nombre de documents");
console.log("   - V√©rifiez les r√©sultats apr√®s chaque op√©ration");
console.log("");

console.log("üéØ OBJECTIF :");
console.log(
  '   - Supprimer toutes les URLs contenant "render.com" ou "localhost"'
);
console.log("   - Nettoyer les champs avatar, gallery et videos");
console.log("   - Pr√©parer la base pour les nouveaux uploads Firebase");
console.log("");

console.log("‚úÖ APR√àS LE NETTOYAGE :");
console.log("   - Tous les nouveaux uploads iront vers Firebase");
console.log("   - Plus d'URLs cass√©es dans votre app");
console.log("   - Base de donn√©es propre et optimis√©e");
console.log("");

console.log("üöÄ PR√äT √Ä COMMENCER ?");
console.log("   Copiez-collez les commandes MongoDB ci-dessus");
console.log("   Ou utilisez MongoDB Compass avec l'interface graphique");
console.log("");

console.log("üìû BESOIN D'AIDE ?");
console.log("   - V√©rifiez la documentation MongoDB");
console.log("   - Testez sur une base de d√©veloppement d'abord");
console.log("   - Sauvegardez vos donn√©es importantes");
